/* contrib/postgres_fdw/postgres_fdw--1.0.sql */

-- complain if script is sourced in psql, rather than via CREATE EXTENSION
\echo Use "CREATE EXTENSION pgdec128" to load this file. \quit

-- type

CREATE TYPE dec128;

CREATE FUNCTION dec128_in(cstring, oid, integer) RETURNS dec128
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128_out(dec128) RETURNS cstring
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128_typmod_in(cstring[]) RETURNS integer
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128_recv(internal, oid, integer) RETURNS dec128
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128_send(dec128) RETURNS bytea
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE TYPE dec128 (
	INTERNALLENGTH = 24,
	INPUT     = dec128_in,
	OUTPUT    = dec128_out,
	TYPMOD_IN = dec128_typmod_in,
	RECEIVE   = dec128_recv,
	SEND      = dec128_send,
	ALIGNMENT = int4
);

CREATE FUNCTION dec128pl(dec128, dec128) RETURNS dec128
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128mi(dec128, dec128) RETURNS dec128
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128mul(dec128, dec128) RETURNS dec128
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128div(dec128, dec128) RETURNS dec128
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128mod(dec128, dec128) RETURNS dec128
	AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128eq(dec128, dec128) RETURNS bool
        AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128ne(dec128, dec128) RETURNS bool
        AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128lt(dec128, dec128) RETURNS bool
        AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128gt(dec128, dec128) RETURNS bool
        AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128le(dec128, dec128) RETURNS bool
        AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

CREATE FUNCTION dec128ge(dec128, dec128) RETURNS bool
        AS 'MODULE_PATHNAME' LANGUAGE C IMMUTABLE STRICT PARALLEL SAFE;

-- operators
CREATE OPERATOR + (
	LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128pl,
	COMMUTATOR = +
);

CREATE OPERATOR - (
	LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128mi,
	COMMUTATOR = -
);

CREATE OPERATOR * (
	LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128mul,
	COMMUTATOR = *
);

CREATE OPERATOR / (
	LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128div,
	COMMUTATOR = /
);

CREATE OPERATOR % (
	LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128mod,
	COMMUTATOR = %
);

CREATE OPERATOR = (
        LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128eq,
        COMMUTATOR = = , NEGATOR = <> ,
	RESTRICT = eqsel, JOIN = eqjoinsel
);

CREATE OPERATOR < (
        LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128lt,
        COMMUTATOR = < , NEGATOR = >= ,
        RESTRICT = scalarltsel, JOIN = scalarltjoinsel
);

CREATE OPERATOR <= (
        LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128le,
        COMMUTATOR = <= , NEGATOR = > ,
        RESTRICT = scalarlesel, JOIN = scalarlejoinsel
);

CREATE OPERATOR <> (
        LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128ne,
        COMMUTATOR = <> , NEGATOR = = ,
        RESTRICT = eqsel, JOIN = eqjoinsel
);

CREATE OPERATOR >= (
        LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128ge,
        COMMUTATOR = >= , NEGATOR = < ,
        RESTRICT = scalargesel, JOIN = scalargejoinsel
);

CREATE OPERATOR > (
        LEFTARG = dec128, RIGHTARG = dec128, PROCEDURE = dec128gt,
        COMMUTATOR = > , NEGATOR = <= ,
        RESTRICT = scalargtsel, JOIN = scalargtjoinsel
);

-- aggregates

CREATE AGGREGATE sum(dec128) (
	SFUNC = dec128pl,
	STYPE = dec128,
	COMBINEFUNC = dec128pl,
	PARALLEL = SAFE
);

